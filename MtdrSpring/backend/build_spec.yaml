version: 0.1
component: build
timeoutInSeconds: 1000
shell: bash
failImmediatelyOnError: true

env:
  variables:
    "JAVA_HOME" : "/usr/lib64/graalvm/graalvm-java20"
    "IMAGE_NAME": "todolistapp-springboot"
    "DOCKER_REGISTRY": "mx-queretaro-1.ocir.io/axcioc1wifb3/reacttodo/gw5ok"
    "TODO_PDB_NAME": "reacttodogw5ok"
    "UI_USERNAME": "team34"
    "OCI_REGION": "mx-queretaro-1"


  exportedVariables:
    - BuildServiceVersion

steps:
  - type: Command
    name: Install the latest Oracle GraalVM for JDK 20 - JDK and Native Image
    command: |
      yum -y install graalvm-20-native-image
  
  - type: Command
    name: Set the PATH here
    command: |
      export PATH=$JAVA_HOME/bin:$PATH  

  - type: Command
    name: Compile
    command: mvn -f /workspace/Botacle/MtdrSpring/backend/pom.xml compile

  - type: Command
    name: Package
    command: mvn -f /workspace/Botacle/MtdrSpring/backend/pom.xml clean package spring-boot:repackage

  - type: Command
    name: Check
    command: ls -la /workspace/Botacle/MtdrSpring/backend/target/

  - type: Command
    name: Dockerize
    command: |
      BuildServiceVersion=`echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-7`
      echo $BuildServiceVersion
      docker build --platform=linux/arm64 -t $IMAGE_NAME /workspace/Botacle/MtdrSpring/backend/

  - type: Command
    name: Set up deployment
    command: |
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      chmod +x kubectl
      mkdir -p ~/.local/bin
      mv ./kubectl ~/.local/bin/kubectl
      export PATH=$PATH:~/.local/bin

  - type: Command
    name: Configure kubeconfig
    command: |
      mkdir -p ~/.kube
      cp /workspace/Botacle/MtdrSpring/backend/kubeconfig.yaml ~/.kube/config

  - type: Command
    name: Install kube_token_cache plugin
    command: |
      cp /workspace/Botacle/MtdrSpring/utils/kube_token_cache.sh /usr/local/bin/
      chmod +x /usr/local/bin/kube_token_cache.sh  
  
  - type: Command
    name: Undeploy
    command: |
      echo delete frontend deployment and service...
      kubectl -n mtdrworkshop delete deployment todolistapp-springboot-deployment
      kubectl -n mtdrworkshop delete service todolistapp-springboot-service

  - type: Command
    name: Compile
    command: mvn -f /workspace/Botacle/MtdrSpring/backend/pom.xml compile

  - type: Command
    name: Package
    command: mvn -f /workspace/Botacle/MtdrSpring/backend/pom.xml clean package spring-boot:repackage

  - type: Command
    name: Check
    command: ls -la /workspace/Botacle/MtdrSpring/backend/target/

  - type: Command
    name: Dockerize
    command: |
      BuildServiceVersion=`echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-7`
      echo $BuildServiceVersion
      docker build --platform=linux/arm64 -t $IMAGE_NAME /workspace/Botacle/MtdrSpring/backend/

  - type: Command
    name: Set up deployment
    command: |
      echo "Creating springboot deplyoment and service"
      sed -i "s|%DOCKER_REGISTRY%|${DOCKER_REGISTRY}|g" /workspace/Botacle/MtdrSpring/backend/target/classes/todolistapp-springboot.yaml
      sed -i "s|%VERSION%|${BuildServiceVersion}|g" /workspace/Botacle/MtdrSpring/backend/target/classes/todolistapp-springboot.yaml
      sed -i "s|%TODO_PDB_NAME%|${TODO_PDB_NAME}|g" /workspace/Botacle/MtdrSpring/backend/target/classes/todolistapp-springboot.yaml
      sed -i "s|%OCI_REGION%|${OCI_REGION}|g" /workspace/Botacle/MtdrSpring/backend/target/classes/todolistapp-springboot.yaml
      sed -i "s|%UI_USERNAME%|${UI_USERNAME}|g" /workspace/Botacle/MtdrSpring/backend/target/classes/todolistapp-springboot.yaml
    

